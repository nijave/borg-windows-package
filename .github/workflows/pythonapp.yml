name: Package borg and cygwin

on:
  push:
  schedule:
    - cron: "0 17 * * *"

jobs:
  build-borg:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master

      - name: Install cygwin base
        run: |
          choco config get cacheLocation
          For ($i = 0; $i -le 3; $i++) {
            choco install --no-progress cygwin
            If($?) {
              break
            }
          }

      - name: Install cygwin borgbackup reqs
        run: |
          C:\tools\cygwin\cygwinsetup.exe -nqWgv `
              -s http://mirrors.kernel.org/sourceware/cygwin/ `
              -R C:\tools\cygwin `
              -P cygwin-devel,gcc-g++,libssl-devel,python36-pip,python36-devel `
                | Out-String
          Write-Output $?

      - name: Build borgbackup wheel
        id: build-whl
        run: |
          dos2unix "$(pwd)\build.sh"
          C:\tools\cygwin\bin\bash.exe --login "$(pwd)\build.sh"

      - name: Upload borgbackup wheel
        uses: actions/upload-artifact@master
        with:
          name: ${{ steps.build-whl.outputs.version }}
          path: ${{ steps.build-whl.outputs.whl_path }}
      
      - name: Create release
        id: create_release
        uses: actions/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.build-whl.outputs.version }}
          release_name: ${{ steps.build-whl.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload release artifact
        id: upload-release-asset 
        uses: actions/upload-release-asset@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.build-whl.outputs.whl_path }}
          asset_name: ${{ steps.build-whl.outputs.whl_name }}
          asset_content_type: application/zip